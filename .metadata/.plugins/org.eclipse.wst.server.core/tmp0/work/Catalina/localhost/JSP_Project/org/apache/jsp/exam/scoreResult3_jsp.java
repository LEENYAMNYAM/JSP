/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-02-28 00:50:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.exam;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.exam.ScoreBean;

public final class scoreResult3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.exam.ScoreBean");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>ScoreResult</title>\r\n");
      out.write("</head>\r\n");
 // 스크립트릿(JSP를 해석하기위한 언어)
request.setCharacterEncoding("utf-8");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- jsp 액션태그 -->\r\n");
      out.write("<!-- 자바에서 String name = request.getParameter(\"name\"); 와 같은 역할을 함   -->\r\n");
      com.exam.ScoreBean sb = null;
      sb = (com.exam.ScoreBean) _jspx_page_context.getAttribute("sb", jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      if (sb == null){
        sb = new com.exam.ScoreBean();
        _jspx_page_context.setAttribute("sb", sb, jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- sb의 모든 필드를 가져옴 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("sb"), request);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!-- jsp setProperty 활용 -->\r\n");
      out.write("<h3>scoreResult3.jsp</h3>\r\n");
      out.write("이름 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.exam.ScoreBean)_jspx_page_context.findAttribute("sb")).getName())));
      out.write("<br/>\r\n");
      out.write("국어 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.exam.ScoreBean)_jspx_page_context.findAttribute("sb")).getKor())));
      out.write("<br/>\r\n");
      out.write("영어 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.exam.ScoreBean)_jspx_page_context.findAttribute("sb")).getEng())));
      out.write("<br/>\r\n");
      out.write("수학 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.exam.ScoreBean)_jspx_page_context.findAttribute("sb")).getMath())));
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("<!-- 이부분은 원래대로 하는게 더 간단함. -->\r\n");
      out.write("<hr>\r\n");
      out.write("이름 : ");
      out.print( sb.getName() );
      out.write("<br/>\r\n");
      out.write("국어 : ");
      out.print( sb.getKor() );
      out.write("<br/>\r\n");
      out.write("영어 : ");
      out.print( sb.getEng() );
      out.write("<br/>\r\n");
      out.write("수학 : ");
      out.print( sb.getMath() );
      out.write("<br/>\r\n");
      out.write("총점 : ");
      out.print( sb.getTotal() );
      out.write("<br/>\r\n");
      out.write("평균 : ");
      out.print( sb.getAvg() );
      out.write("<br/>\r\n");
      out.write("학점 : ");
      out.print( sb.getGrade() );
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
